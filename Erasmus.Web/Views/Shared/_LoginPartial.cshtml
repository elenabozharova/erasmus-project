@using Erasmus.Domain.DomainModels
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ErasmusUser> SignInManager
@inject UserManager<ErasmusUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    if(User.IsInRole("Participant"))
    {
        <li class="nav-item">
            <a  class="nav-link text-warning" asp-controller="Participant" asp-action="Profile" title="Manage">Hello @User.Identity.Name!</a>
        </li>
    }
    
    if(User.IsInRole("Organizer"))
    {
        <li class="nav-item">
            <a  class="nav-link text-warning" asp-controller="Organizer" asp-action="Profile"  title="Manage">Hello @User.Identity.Name!</a>
        </li>
    }
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <a class="nav-link btn btn-link text-primary" asp-controller="Account" asp-action="Logout"><i class="fa fa-sign-out" aria-hidden="true"></i> Logout</a>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-primary" asp-controller="Account" asp-action="RegisterAsChoice">
            <i class="fa fa-user-plus" aria-hidden="true"></i> Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-primary" asp-controller="Account" asp-action="Login">
            <i class="fa fa-sign-in" aria-hidden="true"></i> Login</a>
    </li>
}
</ul>
